// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/northflank-go/pkg/utils"
	"time"
)

// ClustersResultDataClustersNodePoolsAutoscaling - Auto scaling settings to use for the node pool. Requires that the cloud provider supports this feature.
type ClustersResultDataClustersNodePoolsAutoscaling struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Enabled              *bool                  `default:"false" json:"enabled"`
	Max                  *int64                 `json:"max,omitempty"`
	Min                  *int64                 `json:"min,omitempty"`
}

func (c ClustersResultDataClustersNodePoolsAutoscaling) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClustersResultDataClustersNodePoolsAutoscaling) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClustersResultDataClustersNodePoolsAutoscaling) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClustersResultDataClustersNodePoolsAutoscaling) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *ClustersResultDataClustersNodePoolsAutoscaling) GetMax() *int64 {
	if o == nil {
		return nil
	}
	return o.Max
}

func (o *ClustersResultDataClustersNodePoolsAutoscaling) GetMin() *int64 {
	if o == nil {
		return nil
	}
	return o.Min
}

type ClustersResultDataClustersNodePools struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Auto scaling settings to use for the node pool. Requires that the cloud provider supports this feature.
	Autoscaling *ClustersResultDataClustersNodePoolsAutoscaling `json:"autoscaling,omitempty"`
	// Zones in which the node pool should be provisioned.
	AvailabilityZones []string `json:"availabilityZones,omitempty"`
	// Disk size in GB
	DiskSize int64 `json:"diskSize"`
	// The disk type to use.
	DiskType *string `json:"diskType,omitempty"`
	// ID of existing node pool. Must be passed when modifying existing node pools. Not relevant for new node pools
	ID *string `json:"id,omitempty"`
	// Set of label keys and values that can be used to determine scheduling via resource tags.
	Labels map[string]interface{} `json:"labels,omitempty"`
	// Number of nodes to the node pool should be provisioned with.
	NodeCount int64 `json:"nodeCount"`
	// Machine type to be used by the node pool.
	NodeType string `json:"nodeType"`
	// Configures node pool with preemptible / spot instances if enabled.
	Preemptible *bool `default:"false" json:"preemptible"`
	// When 'provider' is 'azure', at least one system node pool is required per cluster.
	SystemPool *bool `json:"systemPool,omitempty"`
}

func (c ClustersResultDataClustersNodePools) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClustersResultDataClustersNodePools) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClustersResultDataClustersNodePools) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClustersResultDataClustersNodePools) GetAutoscaling() *ClustersResultDataClustersNodePoolsAutoscaling {
	if o == nil {
		return nil
	}
	return o.Autoscaling
}

func (o *ClustersResultDataClustersNodePools) GetAvailabilityZones() []string {
	if o == nil {
		return nil
	}
	return o.AvailabilityZones
}

func (o *ClustersResultDataClustersNodePools) GetDiskSize() int64 {
	if o == nil {
		return 0
	}
	return o.DiskSize
}

func (o *ClustersResultDataClustersNodePools) GetDiskType() *string {
	if o == nil {
		return nil
	}
	return o.DiskType
}

func (o *ClustersResultDataClustersNodePools) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ClustersResultDataClustersNodePools) GetLabels() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *ClustersResultDataClustersNodePools) GetNodeCount() int64 {
	if o == nil {
		return 0
	}
	return o.NodeCount
}

func (o *ClustersResultDataClustersNodePools) GetNodeType() string {
	if o == nil {
		return ""
	}
	return o.NodeType
}

func (o *ClustersResultDataClustersNodePools) GetPreemptible() *bool {
	if o == nil {
		return nil
	}
	return o.Preemptible
}

func (o *ClustersResultDataClustersNodePools) GetSystemPool() *bool {
	if o == nil {
		return nil
	}
	return o.SystemPool
}

type ClustersResultDataClustersStatusState struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	State                *string                `json:"state,omitempty"`
	TransitionTime       *time.Time             `json:"transitionTime,omitempty"`
}

func (c ClustersResultDataClustersStatusState) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClustersResultDataClustersStatusState) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClustersResultDataClustersStatusState) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClustersResultDataClustersStatusState) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *ClustersResultDataClustersStatusState) GetTransitionTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.TransitionTime
}

type ClustersResultDataClustersStatus struct {
	AdditionalProperties map[string]interface{}                 `additionalProperties:"true" json:"-"`
	NextUpdateAfter      *time.Time                             `json:"nextUpdateAfter,omitempty"`
	State                *ClustersResultDataClustersStatusState `json:"state,omitempty"`
}

func (c ClustersResultDataClustersStatus) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClustersResultDataClustersStatus) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClustersResultDataClustersStatus) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClustersResultDataClustersStatus) GetNextUpdateAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.NextUpdateAfter
}

func (o *ClustersResultDataClustersStatus) GetState() *ClustersResultDataClustersStatusState {
	if o == nil {
		return nil
	}
	return o.State
}

// ClustersResultDataClusters - A cluster object.
type ClustersResultDataClusters struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// The time the cluster was created.
	CreatedAt time.Time `json:"createdAt"`
	// Indicates if provider resource deletion has been requested by the user.
	DeletionRequested bool `json:"deletionRequested"`
	// A short description of the cluster.
	Description *string `json:"description,omitempty"`
	// Identifier for the cluster.
	ID string `json:"id"`
	// ID of the provider integration used by this cluster.
	IntegrationID string `json:"integrationId"`
	// The name of the cluster.
	Name      string                              `json:"name"`
	NodePools ClustersResultDataClustersNodePools `json:"nodePools"`
	// The cloud provider to which this cluster belongs to.
	Provider *string                           `json:"provider,omitempty"`
	Status   *ClustersResultDataClustersStatus `json:"status,omitempty"`
}

func (c ClustersResultDataClusters) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClustersResultDataClusters) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClustersResultDataClusters) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClustersResultDataClusters) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *ClustersResultDataClusters) GetDeletionRequested() bool {
	if o == nil {
		return false
	}
	return o.DeletionRequested
}

func (o *ClustersResultDataClusters) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ClustersResultDataClusters) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ClustersResultDataClusters) GetIntegrationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationID
}

func (o *ClustersResultDataClusters) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ClustersResultDataClusters) GetNodePools() ClustersResultDataClustersNodePools {
	if o == nil {
		return ClustersResultDataClustersNodePools{}
	}
	return o.NodePools
}

func (o *ClustersResultDataClusters) GetProvider() *string {
	if o == nil {
		return nil
	}
	return o.Provider
}

func (o *ClustersResultDataClusters) GetStatus() *ClustersResultDataClustersStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

// ClustersResultData - Result data.
type ClustersResultData struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// An array of clusters.
	Clusters []ClustersResultDataClusters `json:"clusters"`
}

func (c ClustersResultData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClustersResultData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClustersResultData) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClustersResultData) GetClusters() []ClustersResultDataClusters {
	if o == nil {
		return []ClustersResultDataClusters{}
	}
	return o.Clusters
}

// ClustersResultPagination - Data about the endpoint pagination.
type ClustersResultPagination struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// The number of results returned by this request.
	Count float32 `json:"count"`
	// The cursor to access the next page of results.
	Cursor *string `json:"cursor,omitempty"`
	// Is there another page of results available?
	HasNextPage bool `json:"hasNextPage"`
}

func (c ClustersResultPagination) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClustersResultPagination) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClustersResultPagination) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClustersResultPagination) GetCount() float32 {
	if o == nil {
		return 0.0
	}
	return o.Count
}

func (o *ClustersResultPagination) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *ClustersResultPagination) GetHasNextPage() bool {
	if o == nil {
		return false
	}
	return o.HasNextPage
}

// ClustersResult - Response object.
type ClustersResult struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Result data.
	Data ClustersResultData `json:"data"`
	// Data about the endpoint pagination.
	Pagination ClustersResultPagination `json:"pagination"`
}

func (c ClustersResult) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClustersResult) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClustersResult) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClustersResult) GetData() ClustersResultData {
	if o == nil {
		return ClustersResultData{}
	}
	return o.Data
}

func (o *ClustersResult) GetPagination() ClustersResultPagination {
	if o == nil {
		return ClustersResultPagination{}
	}
	return o.Pagination
}
