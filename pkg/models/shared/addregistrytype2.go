// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/northflank-go/v3/pkg/utils"
)

// Keyfile - Contents of `keyfile.json`, used to authenticate with Google Container Registry.
type Keyfile struct {
}

// AddRegistryType2Provider - The registry provider associated with this set of credentials.
type AddRegistryType2Provider string

const (
	AddRegistryType2ProviderDockerhub AddRegistryType2Provider = "dockerhub"
	AddRegistryType2ProviderGcr       AddRegistryType2Provider = "gcr"
	AddRegistryType2ProviderGcrEu     AddRegistryType2Provider = "gcr-eu"
	AddRegistryType2ProviderGcrUs     AddRegistryType2Provider = "gcr-us"
	AddRegistryType2ProviderGitlab    AddRegistryType2Provider = "gitlab"
	AddRegistryType2ProviderGithub    AddRegistryType2Provider = "github"
	AddRegistryType2ProviderCustom    AddRegistryType2Provider = "custom"
)

func (e AddRegistryType2Provider) ToPointer() *AddRegistryType2Provider {
	return &e
}

func (e *AddRegistryType2Provider) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dockerhub":
		fallthrough
	case "gcr":
		fallthrough
	case "gcr-eu":
		fallthrough
	case "gcr-us":
		fallthrough
	case "gitlab":
		fallthrough
	case "github":
		fallthrough
	case "custom":
		*e = AddRegistryType2Provider(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddRegistryType2Provider: %v", v)
	}
}

// AddRegistryType2Restrictions - Data about whether the credentials are restricted to certain projects.
type AddRegistryType2Restrictions struct {
	// An array of projects the credentials are restricted to, if applicable.
	Projects []string `json:"projects,omitempty"`
	// Whether the credentials are restricted to specific projects.
	Restricted *bool `default:"false" json:"restricted"`
}

func (a AddRegistryType2Restrictions) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AddRegistryType2Restrictions) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AddRegistryType2Restrictions) GetProjects() []string {
	if o == nil {
		return nil
	}
	return o.Projects
}

func (o *AddRegistryType2Restrictions) GetRestricted() *bool {
	if o == nil {
		return nil
	}
	return o.Restricted
}

// AddRegistryType2 - Authenticate with a `keyfile.json`. Used for authenticating with Google Container Registry.
type AddRegistryType2 struct {
	// Description of the credentials.
	Description string `json:"description"`
	// Contents of `keyfile.json`, used to authenticate with Google Container Registry.
	Keyfile Keyfile `json:"keyfile"`
	// Name of the credentials.
	Name string `json:"name"`
	// The registry provider associated with this set of credentials.
	Provider AddRegistryType2Provider `json:"provider"`
	// Custom url for the container registry. Only usable (and required) when `provider` is `custom`.
	RegistryURL *string `json:"registryUrl,omitempty"`
	// Data about whether the credentials are restricted to certain projects.
	Restrictions *AddRegistryType2Restrictions `json:"restrictions,omitempty"`
}

func (o *AddRegistryType2) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *AddRegistryType2) GetKeyfile() Keyfile {
	if o == nil {
		return Keyfile{}
	}
	return o.Keyfile
}

func (o *AddRegistryType2) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AddRegistryType2) GetProvider() AddRegistryType2Provider {
	if o == nil {
		return AddRegistryType2Provider("")
	}
	return o.Provider
}

func (o *AddRegistryType2) GetRegistryURL() *string {
	if o == nil {
		return nil
	}
	return o.RegistryURL
}

func (o *AddRegistryType2) GetRestrictions() *AddRegistryType2Restrictions {
	if o == nil {
		return nil
	}
	return o.Restrictions
}
