// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AddRegistryType3Auths - The `auths` data extracted from your Docker config file.
type AddRegistryType3Auths struct {
}

// AddRegistryType3Provider - The registry provider associated with this set of credentials.
type AddRegistryType3Provider string

const (
	AddRegistryType3ProviderDockerhub AddRegistryType3Provider = "dockerhub"
	AddRegistryType3ProviderGcr       AddRegistryType3Provider = "gcr"
	AddRegistryType3ProviderGcrEu     AddRegistryType3Provider = "gcr-eu"
	AddRegistryType3ProviderGcrUs     AddRegistryType3Provider = "gcr-us"
	AddRegistryType3ProviderGitlab    AddRegistryType3Provider = "gitlab"
	AddRegistryType3ProviderGithub    AddRegistryType3Provider = "github"
	AddRegistryType3ProviderCustom    AddRegistryType3Provider = "custom"
)

func (e AddRegistryType3Provider) ToPointer() *AddRegistryType3Provider {
	return &e
}

func (e *AddRegistryType3Provider) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dockerhub":
		fallthrough
	case "gcr":
		fallthrough
	case "gcr-eu":
		fallthrough
	case "gcr-us":
		fallthrough
	case "gitlab":
		fallthrough
	case "github":
		fallthrough
	case "custom":
		*e = AddRegistryType3Provider(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddRegistryType3Provider: %v", v)
	}
}

// AddRegistryType3Restrictions - Data about whether the credentials are restricted to certain projects.
type AddRegistryType3Restrictions struct {
	// An array of projects the credentials are restricted to, if applicable.
	Projects []string `json:"projects,omitempty"`
	// Whether the credentials are restricted to specific projects.
	Restricted *bool `json:"restricted,omitempty"`
}

func (o *AddRegistryType3Restrictions) GetProjects() []string {
	if o == nil {
		return nil
	}
	return o.Projects
}

func (o *AddRegistryType3Restrictions) GetRestricted() *bool {
	if o == nil {
		return nil
	}
	return o.Restricted
}

type AddRegistryType1 struct {
	// Description of the credentials.
	Description string `json:"description"`
	// Name of the credentials.
	Name string `json:"name"`
	// Password, Personal Access Token, or API key for the container registry.
	Password string `json:"password"`
	// The registry provider associated with this set of credentials.
	Provider AddRegistryType1Provider `json:"provider"`
	// Custom url for the container registry. Only usable (and required) when `provider` is `custom`.
	RegistryURL *string `json:"registryUrl,omitempty"`
	// Data about whether the credentials are restricted to certain projects.
	Restrictions *AddRegistryType1Restrictions `json:"restrictions,omitempty"`
	// Username for the container registry.
	Username string `json:"username"`
}

func (o *AddRegistryType1) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *AddRegistryType1) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AddRegistryType1) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

func (o *AddRegistryType1) GetProvider() AddRegistryType1Provider {
	if o == nil {
		return AddRegistryType1Provider("")
	}
	return o.Provider
}

func (o *AddRegistryType1) GetRegistryURL() *string {
	if o == nil {
		return nil
	}
	return o.RegistryURL
}

func (o *AddRegistryType1) GetRestrictions() *AddRegistryType1Restrictions {
	if o == nil {
		return nil
	}
	return o.Restrictions
}

func (o *AddRegistryType1) GetUsername() string {
	if o == nil {
		return ""
	}
	return o.Username
}
