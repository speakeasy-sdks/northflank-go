// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Features supported by this addon type.
type Features struct {
	// Whether this addon supports native (dump) backups
	BackupsDump bool `json:"backupsDump"`
	// Whether this addon supports customising the database name.
	CustomDBName bool `json:"customDBName"`
	// Whether this addon supports external connection.
	ExternalAccess bool `json:"externalAccess"`
	// Whether this addon supports addon forking - creating a new addon from an existing addon backup.
	ForkAddon bool `json:"forkAddon"`
	// Whether this addon supports importing from an external backup.
	ImportDump bool `json:"importDump"`
	// Whether this addon supports importing from an existing live database.
	ImportLive bool `json:"importLive"`
	// Whether this addon supports replica scaling.
	ScaleReplicas bool `json:"scaleReplicas"`
	// Whether this addon supports connection via TLS.
	TLS bool `json:"tls"`
}

func (o *Features) GetBackupsDump() bool {
	if o == nil {
		return false
	}
	return o.BackupsDump
}

func (o *Features) GetCustomDBName() bool {
	if o == nil {
		return false
	}
	return o.CustomDBName
}

func (o *Features) GetExternalAccess() bool {
	if o == nil {
		return false
	}
	return o.ExternalAccess
}

func (o *Features) GetForkAddon() bool {
	if o == nil {
		return false
	}
	return o.ForkAddon
}

func (o *Features) GetImportDump() bool {
	if o == nil {
		return false
	}
	return o.ImportDump
}

func (o *Features) GetImportLive() bool {
	if o == nil {
		return false
	}
	return o.ImportLive
}

func (o *Features) GetScaleReplicas() bool {
	if o == nil {
		return false
	}
	return o.ScaleReplicas
}

func (o *Features) GetTLS() bool {
	if o == nil {
		return false
	}
	return o.TLS
}

// Replicas - Details about replica count options for this addon.
type Replicas struct {
	// The default replica count for this addon.
	Default float32 `json:"default"`
	// Available options for replica counts for this addon.
	Options []float32 `json:"options"`
}

func (o *Replicas) GetDefault() float32 {
	if o == nil {
		return 0.0
	}
	return o.Default
}

func (o *Replicas) GetOptions() []float32 {
	if o == nil {
		return []float32{}
	}
	return o.Options
}

// Storage - Details about storage size options for this addon.
type Storage struct {
	// The default storage value for this addon.
	Default float32 `json:"default"`
	// Available options for storage size for this addon, in MB.
	Options []float32 `json:"options"`
}

func (o *Storage) GetDefault() float32 {
	if o == nil {
		return 0.0
	}
	return o.Default
}

func (o *Storage) GetOptions() []float32 {
	if o == nil {
		return []float32{}
	}
	return o.Options
}

// Resources - Details about resource options for the addon type.
type Resources struct {
	// Details about replica count options for this addon.
	Replicas Replicas `json:"replicas"`
	// Details about storage size options for this addon.
	Storage Storage `json:"storage"`
}

func (o *Resources) GetReplicas() Replicas {
	if o == nil {
		return Replicas{}
	}
	return o.Replicas
}

func (o *Resources) GetStorage() Storage {
	if o == nil {
		return Storage{}
	}
	return o.Storage
}

type AddonTypes struct {
	// A description of the addon.
	Description string `json:"description"`
	// Features supported by this addon type.
	Features *Features `json:"features,omitempty"`
	// A list of available major versions of the addon type.
	Major []string `json:"major"`
	// The name of the addon type.
	Name string `json:"name"`
	// Details about resource options for the addon type.
	Resources Resources `json:"resources"`
	// The identifier for the addon type.
	Type string `json:"type"`
	// A list of available versions of the addon type.
	Versions []string `json:"versions"`
}

func (o *AddonTypes) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *AddonTypes) GetFeatures() *Features {
	if o == nil {
		return nil
	}
	return o.Features
}

func (o *AddonTypes) GetMajor() []string {
	if o == nil {
		return []string{}
	}
	return o.Major
}

func (o *AddonTypes) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AddonTypes) GetResources() Resources {
	if o == nil {
		return Resources{}
	}
	return o.Resources
}

func (o *AddonTypes) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *AddonTypes) GetVersions() []string {
	if o == nil {
		return []string{}
	}
	return o.Versions
}

// AddonTypesResultData - Result data.
type AddonTypesResultData struct {
	// A list of available addon types.
	AddonTypes []AddonTypes `json:"addonTypes"`
}

func (o *AddonTypesResultData) GetAddonTypes() []AddonTypes {
	if o == nil {
		return []AddonTypes{}
	}
	return o.AddonTypes
}

// AddonTypesResult - Response object.
type AddonTypesResult struct {
	// Result data.
	Data AddonTypesResultData `json:"data"`
}

func (o *AddonTypesResult) GetData() AddonTypesResultData {
	if o == nil {
		return AddonTypesResultData{}
	}
	return o.Data
}
