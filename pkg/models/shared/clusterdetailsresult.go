// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/northflank-go/pkg/utils"
	"time"
)

// ClusterDetailsResultDataNodePoolsAutoscaling - Auto scaling settings to use for the node pool. Requires that the cloud provider supports this feature.
type ClusterDetailsResultDataNodePoolsAutoscaling struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	Enabled              *bool                  `default:"false" json:"enabled"`
	Max                  *int64                 `json:"max,omitempty"`
	Min                  *int64                 `json:"min,omitempty"`
}

func (c ClusterDetailsResultDataNodePoolsAutoscaling) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClusterDetailsResultDataNodePoolsAutoscaling) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClusterDetailsResultDataNodePoolsAutoscaling) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClusterDetailsResultDataNodePoolsAutoscaling) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *ClusterDetailsResultDataNodePoolsAutoscaling) GetMax() *int64 {
	if o == nil {
		return nil
	}
	return o.Max
}

func (o *ClusterDetailsResultDataNodePoolsAutoscaling) GetMin() *int64 {
	if o == nil {
		return nil
	}
	return o.Min
}

type ClusterDetailsResultDataNodePools struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Auto scaling settings to use for the node pool. Requires that the cloud provider supports this feature.
	Autoscaling *ClusterDetailsResultDataNodePoolsAutoscaling `json:"autoscaling,omitempty"`
	// Zones in which the node pool should be provisioned.
	AvailabilityZones []string `json:"availabilityZones,omitempty"`
	// Disk size in GB
	DiskSize int64 `json:"diskSize"`
	// The disk type to use.
	DiskType *string `json:"diskType,omitempty"`
	// ID of existing node pool. Must be passed when modifying existing node pools. Not relevant for new node pools
	ID *string `json:"id,omitempty"`
	// Set of label keys and values that can be used to determine scheduling via resource tags.
	Labels map[string]interface{} `json:"labels,omitempty"`
	// Number of nodes to the node pool should be provisioned with.
	NodeCount int64 `json:"nodeCount"`
	// Machine type to be used by the node pool.
	NodeType string `json:"nodeType"`
	// Configures node pool with preemptible / spot instances if enabled.
	Preemptible *bool `default:"false" json:"preemptible"`
	// When 'provider' is 'azure', at least one system node pool is required per cluster.
	SystemPool *bool `json:"systemPool,omitempty"`
}

func (c ClusterDetailsResultDataNodePools) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClusterDetailsResultDataNodePools) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClusterDetailsResultDataNodePools) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClusterDetailsResultDataNodePools) GetAutoscaling() *ClusterDetailsResultDataNodePoolsAutoscaling {
	if o == nil {
		return nil
	}
	return o.Autoscaling
}

func (o *ClusterDetailsResultDataNodePools) GetAvailabilityZones() []string {
	if o == nil {
		return nil
	}
	return o.AvailabilityZones
}

func (o *ClusterDetailsResultDataNodePools) GetDiskSize() int64 {
	if o == nil {
		return 0
	}
	return o.DiskSize
}

func (o *ClusterDetailsResultDataNodePools) GetDiskType() *string {
	if o == nil {
		return nil
	}
	return o.DiskType
}

func (o *ClusterDetailsResultDataNodePools) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ClusterDetailsResultDataNodePools) GetLabels() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *ClusterDetailsResultDataNodePools) GetNodeCount() int64 {
	if o == nil {
		return 0
	}
	return o.NodeCount
}

func (o *ClusterDetailsResultDataNodePools) GetNodeType() string {
	if o == nil {
		return ""
	}
	return o.NodeType
}

func (o *ClusterDetailsResultDataNodePools) GetPreemptible() *bool {
	if o == nil {
		return nil
	}
	return o.Preemptible
}

func (o *ClusterDetailsResultDataNodePools) GetSystemPool() *bool {
	if o == nil {
		return nil
	}
	return o.SystemPool
}

type ClusterDetailsResultDataStatusState struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	State                *string                `json:"state,omitempty"`
	TransitionTime       *time.Time             `json:"transitionTime,omitempty"`
}

func (c ClusterDetailsResultDataStatusState) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClusterDetailsResultDataStatusState) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClusterDetailsResultDataStatusState) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClusterDetailsResultDataStatusState) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *ClusterDetailsResultDataStatusState) GetTransitionTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.TransitionTime
}

type ClusterDetailsResultDataStatus struct {
	AdditionalProperties map[string]interface{}               `additionalProperties:"true" json:"-"`
	NextUpdateAfter      *time.Time                           `json:"nextUpdateAfter,omitempty"`
	State                *ClusterDetailsResultDataStatusState `json:"state,omitempty"`
}

func (c ClusterDetailsResultDataStatus) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClusterDetailsResultDataStatus) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClusterDetailsResultDataStatus) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClusterDetailsResultDataStatus) GetNextUpdateAfter() *time.Time {
	if o == nil {
		return nil
	}
	return o.NextUpdateAfter
}

func (o *ClusterDetailsResultDataStatus) GetState() *ClusterDetailsResultDataStatusState {
	if o == nil {
		return nil
	}
	return o.State
}

// ClusterDetailsResultData - Result data.
type ClusterDetailsResultData struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// The time the cluster was created.
	CreatedAt time.Time `json:"createdAt"`
	// Indicates if provider resource deletion has been requested by the user.
	DeletionRequested bool `json:"deletionRequested"`
	// A short description of the cluster.
	Description *string `json:"description,omitempty"`
	// Identifier for the cluster.
	ID string `json:"id"`
	// ID of the provider integration used by this cluster.
	IntegrationID string `json:"integrationId"`
	// The name of the cluster.
	Name      string                            `json:"name"`
	NodePools ClusterDetailsResultDataNodePools `json:"nodePools"`
	// The cloud provider to which this cluster belongs to.
	Provider *string                         `json:"provider,omitempty"`
	Status   *ClusterDetailsResultDataStatus `json:"status,omitempty"`
}

func (c ClusterDetailsResultData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClusterDetailsResultData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClusterDetailsResultData) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClusterDetailsResultData) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *ClusterDetailsResultData) GetDeletionRequested() bool {
	if o == nil {
		return false
	}
	return o.DeletionRequested
}

func (o *ClusterDetailsResultData) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ClusterDetailsResultData) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ClusterDetailsResultData) GetIntegrationID() string {
	if o == nil {
		return ""
	}
	return o.IntegrationID
}

func (o *ClusterDetailsResultData) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ClusterDetailsResultData) GetNodePools() ClusterDetailsResultDataNodePools {
	if o == nil {
		return ClusterDetailsResultDataNodePools{}
	}
	return o.NodePools
}

func (o *ClusterDetailsResultData) GetProvider() *string {
	if o == nil {
		return nil
	}
	return o.Provider
}

func (o *ClusterDetailsResultData) GetStatus() *ClusterDetailsResultDataStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

// ClusterDetailsResult - Response object.
type ClusterDetailsResult struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Result data.
	Data ClusterDetailsResultData `json:"data"`
}

func (c ClusterDetailsResult) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClusterDetailsResult) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClusterDetailsResult) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ClusterDetailsResult) GetData() ClusterDetailsResultData {
	if o == nil {
		return ClusterDetailsResultData{}
	}
	return o.Data
}
