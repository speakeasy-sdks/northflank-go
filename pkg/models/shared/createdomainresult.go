// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateDomainResultStatus - The status of the domain verification.
type CreateDomainResultStatus string

const (
	CreateDomainResultStatusPending  CreateDomainResultStatus = "pending"
	CreateDomainResultStatusVerified CreateDomainResultStatus = "verified"
)

func (e CreateDomainResultStatus) ToPointer() *CreateDomainResultStatus {
	return &e
}

func (e *CreateDomainResultStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "verified":
		*e = CreateDomainResultStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDomainResultStatus: %v", v)
	}
}

// CreateDomainResultData - Result data.
type CreateDomainResultData struct {
	// The hostname to add to your domain's DNS records as a TXT record to verify the domain.
	Hostname string `json:"hostname"`
	// The domain name.
	Name string `json:"name"`
	// The status of the domain verification.
	Status CreateDomainResultStatus `json:"status"`
	// The token to add as the content of the TXT record to verify the domain.
	Token string `json:"token"`
}

func (o *CreateDomainResultData) GetHostname() string {
	if o == nil {
		return ""
	}
	return o.Hostname
}

func (o *CreateDomainResultData) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateDomainResultData) GetStatus() CreateDomainResultStatus {
	if o == nil {
		return CreateDomainResultStatus("")
	}
	return o.Status
}

func (o *CreateDomainResultData) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

// CreateDomainResult - Response object.
type CreateDomainResult struct {
	// Result data.
	Data CreateDomainResultData `json:"data"`
}

func (o *CreateDomainResult) GetData() CreateDomainResultData {
	if o == nil {
		return CreateDomainResultData{}
	}
	return o.Data
}
