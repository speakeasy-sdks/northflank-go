// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/northflank-go/pkg/utils"
)

// CreateDomainResultDataStatus - The status of the domain verification.
type CreateDomainResultDataStatus string

const (
	CreateDomainResultDataStatusPending  CreateDomainResultDataStatus = "pending"
	CreateDomainResultDataStatusVerified CreateDomainResultDataStatus = "verified"
)

func (e CreateDomainResultDataStatus) ToPointer() *CreateDomainResultDataStatus {
	return &e
}

func (e *CreateDomainResultDataStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "verified":
		*e = CreateDomainResultDataStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDomainResultDataStatus: %v", v)
	}
}

// CreateDomainResultData - Result data.
type CreateDomainResultData struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// The hostname to add to your domain's DNS records as a TXT record to verify the domain.
	Hostname string `json:"hostname"`
	// The domain name.
	Name string `json:"name"`
	// The status of the domain verification.
	Status CreateDomainResultDataStatus `json:"status"`
	// The token to add as the content of the TXT record to verify the domain.
	Token string `json:"token"`
}

func (c CreateDomainResultData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateDomainResultData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateDomainResultData) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *CreateDomainResultData) GetHostname() string {
	if o == nil {
		return ""
	}
	return o.Hostname
}

func (o *CreateDomainResultData) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateDomainResultData) GetStatus() CreateDomainResultDataStatus {
	if o == nil {
		return CreateDomainResultDataStatus("")
	}
	return o.Status
}

func (o *CreateDomainResultData) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

// CreateDomainResult - Response object.
type CreateDomainResult struct {
	AdditionalProperties map[string]interface{} `additionalProperties:"true" json:"-"`
	// Result data.
	Data CreateDomainResultData `json:"data"`
}

func (c CreateDomainResult) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateDomainResult) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateDomainResult) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *CreateDomainResult) GetData() CreateDomainResultData {
	if o == nil {
		return CreateDomainResultData{}
	}
	return o.Data
}
