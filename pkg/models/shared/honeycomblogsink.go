// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/northflank-go/pkg/utils"
)

// HoneycombLogSinkSinkData - Details about the Honeycomb log sink.
type HoneycombLogSinkSinkData struct {
	// Honeycomb API Key
	APIKey string `json:"api_key"`
	// Name of the dataset
	Dataset string `json:"dataset"`
}

func (o *HoneycombLogSinkSinkData) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *HoneycombLogSinkSinkData) GetDataset() string {
	if o == nil {
		return ""
	}
	return o.Dataset
}

// HoneycombLogSink - Create a log sink using Honeycomb
type HoneycombLogSink struct {
	// Description of the log sink.
	Description *string `json:"description,omitempty"`
	// If `true` your network access logs will be forwarded with your workload logs
	ForwardAccessLogs *bool `default:"false" json:"forwardAccessLogs"`
	// Name of the log sink.
	Name string `json:"name"`
	// If `restricted` is `true`, only logs from these projects will be sent to the log sink.
	Projects []string `json:"projects,omitempty"`
	// If `true`, only logs from the projects in `projects` will be sent to the log sink.
	Restricted *bool `default:"false" json:"restricted"`
	// Details about the Honeycomb log sink.
	SinkData HoneycombLogSinkSinkData `json:"sinkData"`
	// The type of the log sink.
	sinkType string `const:"honeycomb" json:"sinkType"`
	// If `true`, we will do additional parsing on your JSON formatted log lines and your extract custom labels
	UseCustomLabels *bool `default:"false" json:"useCustomLabels"`
}

func (h HoneycombLogSink) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HoneycombLogSink) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *HoneycombLogSink) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *HoneycombLogSink) GetForwardAccessLogs() *bool {
	if o == nil {
		return nil
	}
	return o.ForwardAccessLogs
}

func (o *HoneycombLogSink) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *HoneycombLogSink) GetProjects() []string {
	if o == nil {
		return nil
	}
	return o.Projects
}

func (o *HoneycombLogSink) GetRestricted() *bool {
	if o == nil {
		return nil
	}
	return o.Restricted
}

func (o *HoneycombLogSink) GetSinkData() HoneycombLogSinkSinkData {
	if o == nil {
		return HoneycombLogSinkSinkData{}
	}
	return o.SinkData
}

func (o *HoneycombLogSink) GetSinkType() string {
	return "honeycomb"
}

func (o *HoneycombLogSink) GetUseCustomLabels() *bool {
	if o == nil {
		return nil
	}
	return o.UseCustomLabels
}
