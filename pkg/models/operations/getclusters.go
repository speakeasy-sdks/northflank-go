// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/northflank-go/v3/pkg/models/shared"
	"github.com/speakeasy-sdks/northflank-go/v3/pkg/utils"
	"net/http"
)

type GetClustersRequest struct {
	Cursor  *string `queryParam:"style=form,explode=true,name=cursor"`
	Page    *int64  `queryParam:"style=form,explode=true,name=page"`
	PerPage *int64  `default:"50" queryParam:"style=form,explode=true,name=per_page"`
}

func (g GetClustersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetClustersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetClustersRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *GetClustersRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *GetClustersRequest) GetPerPage() *int64 {
	if o == nil {
		return nil
	}
	return o.PerPage
}

type GetClustersResponse struct {
	// A list of clusters for the authenticated user
	ClustersResult *shared.ClustersResult
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetClustersResponse) GetClustersResult() *shared.ClustersResult {
	if o == nil {
		return nil
	}
	return o.ClustersResult
}

func (o *GetClustersResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetClustersResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetClustersResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
